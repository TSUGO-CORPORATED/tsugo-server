// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                         Int            @id @default(autoincrement())
  uid                        String         @unique @db.VarChar(255)
  email                      String         @unique @db.VarChar(255)
  firstName                  String         @db.VarChar(255)
  lastName                   String         @db.VarChar(255)
  profilePicture             Bytes?
  about                      String?
  userLanguage               UserLanguage[]
  message                    Message[]
  appointmentClientUser      Appointment[]  @relation("clientUser")
  appointmentInterpreterUser Appointment[]  @relation("interpreterUser")
}

model UserLanguage {
  id             Int     @id @default(autoincrement())
  language       String  @db.VarChar(50)
  proficiency    String  @db.VarChar(50)
  certifications String? @db.VarChar(255)
  user           User    @relation(fields: [userId], references: [id])
  userId         Int
}

model Appointment {
  id                        Int       @id @default(autoincrement())
  status                    String    @db.VarChar(50)
  appointmentTitle          String    @db.VarChar(255)
  appointmentType           String    @db.VarChar(50)
  appointmentDateTime       DateTime
  appointmentNote           String?
  clientUser                User      @relation("clientUser", fields: [clientUserId], references: [id])
  clientUserId              Int
  clientSpokenLanguage      String    @db.VarChar(50)
  interpreterUser           User?     @relation("interpreterUser", fields: [interpreterUserId], references: [id])
  interpreterUserId         Int?
  interpreterSpokenLanguage String    @db.VarChar(50)
  locationName              String?   @db.VarChar(255)
  locationAddress           String?   @db.VarChar(255)
  locationLatitude          Decimal?
  locationLongitude         Decimal?
  reviewClientThumb         Boolean?
  reviewClientNote          String?
  reviewInterpreterThumb    Boolean?
  reviewInterpreterNote     String?
  message                   Message[]
}

model Message {
  id               Int         @id @default(autoincrement())
  appointment      Appointment @relation(fields: [appointmentId], references: [id])
  appointmentId    Int
  user             User        @relation(fields: [userId], references: [id])
  userId           Int
  content          String
  messageTimestamp DateTime
}
